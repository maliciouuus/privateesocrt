# Generated by Django 4.2.20 on 2025-05-06 21:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(blank=True, null=True, verbose_name="last login"),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={"unique": "A user with that username already exists."},
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(blank=True, max_length=150, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(blank=True, max_length=150, verbose_name="last name"),
                ),
                (
                    "email",
                    models.EmailField(blank=True, max_length=254, verbose_name="email address"),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_type",
                    models.CharField(
                        choices=[
                            ("ambassador", "Ambassadeur"),
                            ("administrator", "Administrateur"),
                        ],
                        default="ambassador",
                        max_length=15,
                        verbose_name="Type d'utilisateur",
                    ),
                ),
                ("bio", models.TextField(blank=True, verbose_name="Biographie")),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, verbose_name="Numéro de téléphone"),
                ),
                (
                    "birth_date",
                    models.DateField(blank=True, null=True, verbose_name="Date de naissance"),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="profile_pics/",
                        verbose_name="Photo de profil",
                    ),
                ),
                (
                    "referral_code",
                    models.CharField(blank=True, max_length=10, null=True, unique=True),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Vérifié"),
                ),
                (
                    "user_category",
                    models.CharField(
                        choices=[
                            ("escort", "Escorte"),
                            ("ambassador", "Ambassadeur"),
                            ("admin", "Administrateur"),
                        ],
                        default="ambassador",
                        max_length=15,
                        verbose_name="Catégorie d'utilisateur",
                    ),
                ),
                (
                    "payout_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name="Email pour les paiements",
                    ),
                ),
                (
                    "commission_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=20.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(5),
                            django.core.validators.MaxValueValidator(50),
                        ],
                        verbose_name="Taux de commission",
                    ),
                ),
                (
                    "total_commission_earned",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Total des commissions gagnées",
                    ),
                ),
                (
                    "pending_commission",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Commissions en attente",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("last_login_ip", models.GenericIPAddressField(blank=True, null=True)),
                (
                    "telegram_chat_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "telegram_username",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                ("telegram_verified", models.BooleanField(default=False)),
                (
                    "telegram_language",
                    models.CharField(
                        choices=[
                            ("fr", "Français"),
                            ("en", "English"),
                            ("es", "Español"),
                            ("de", "Deutsch"),
                            ("it", "Italiano"),
                            ("ru", "Русский"),
                            ("ar", "العربية"),
                            ("zh", "中文"),
                        ],
                        default="fr",
                        max_length=5,
                        verbose_name="Langue des notifications Telegram",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "referred_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="referrals",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "company_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nom de l'entreprise"
                    ),
                ),
                (
                    "vat_id",
                    models.CharField(blank=True, max_length=50, verbose_name="Numéro de TVA"),
                ),
                ("website", models.URLField(blank=True, verbose_name="Site web")),
                (
                    "address",
                    models.CharField(blank=True, max_length=255, verbose_name="Adresse"),
                ),
                (
                    "zip_code",
                    models.CharField(blank=True, max_length=20, verbose_name="Code postal"),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="Ville"),
                ),
                (
                    "country",
                    models.CharField(blank=True, max_length=100, verbose_name="Pays"),
                ),
                (
                    "dark_mode",
                    models.BooleanField(default=False, verbose_name="Mode sombre"),
                ),
                (
                    "newsletter_subscribed",
                    models.BooleanField(default=True, verbose_name="Abonné à la newsletter"),
                ),
                (
                    "preferred_language",
                    models.CharField(default="fr", max_length=5, verbose_name="Langue préférée"),
                ),
                (
                    "theme_color",
                    models.CharField(
                        default="#7C4DFF", max_length=7, verbose_name="Couleur du thème"
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(default=True, verbose_name="Notifications par email"),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(default=False, verbose_name="Notifications par SMS"),
                ),
                (
                    "two_factor_enabled",
                    models.BooleanField(
                        default=False, verbose_name="Authentification à deux facteurs"
                    ),
                ),
                (
                    "escort_commission_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=30.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(5),
                            django.core.validators.MaxValueValidator(50),
                        ],
                        verbose_name="Taux commission escortes",
                    ),
                ),
                (
                    "ambassador_commission_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=10.0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(5),
                            django.core.validators.MaxValueValidator(50),
                        ],
                        verbose_name="Taux commission ambassadeurs",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="account_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "profil utilisateur",
                "verbose_name_plural": "profils utilisateurs",
            },
        ),
    ]
