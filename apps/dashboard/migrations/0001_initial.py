# Generated by Django 4.2.20 on 2025-05-06 21:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="UserStatistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "total_earnings",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("total_referrals", models.PositiveIntegerField(default=0)),
                ("total_transactions", models.PositiveIntegerField(default=0)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="statistics",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "User Statistics",
            },
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "company_name",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Nom de l'entreprise"
                    ),
                ),
                (
                    "vat_id",
                    models.CharField(blank=True, max_length=50, verbose_name="Numéro de TVA"),
                ),
                ("website", models.URLField(blank=True, verbose_name="Site web")),
                (
                    "address",
                    models.CharField(blank=True, max_length=255, verbose_name="Adresse"),
                ),
                (
                    "zip_code",
                    models.CharField(blank=True, max_length=20, verbose_name="Code postal"),
                ),
                (
                    "city",
                    models.CharField(blank=True, max_length=100, verbose_name="Ville"),
                ),
                (
                    "country",
                    models.CharField(blank=True, max_length=100, verbose_name="Pays"),
                ),
                (
                    "preferred_language",
                    models.CharField(
                        choices=[
                            ("en", "English"),
                            ("fr", "Français"),
                            ("ru", "Русский"),
                            ("de", "Deutsch"),
                            ("zh", "中文"),
                            ("es", "Español"),
                            ("it", "Italiano"),
                            ("ar", "العربية"),
                        ],
                        default="en",
                        max_length=5,
                        verbose_name="Langue préférée",
                    ),
                ),
                (
                    "telegram_chat_id",
                    models.CharField(
                        blank=True,
                        help_text="ID de chat Telegram pour recevoir les notifications",
                        max_length=100,
                        null=True,
                        verbose_name="Telegram Chat ID",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dashboard_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "profil utilisateur",
                "verbose_name_plural": "profils utilisateurs",
            },
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("message", models.TextField()),
                (
                    "notification_type",
                    models.CharField(
                        choices=[
                            ("info", "Information"),
                            ("success", "Succès"),
                            ("warning", "Avertissement"),
                            ("error", "Erreur"),
                        ],
                        default="info",
                        max_length=10,
                    ),
                ),
                ("is_read", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
    ]
